{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/editor/preview.js\",\n  _s = $RefreshSig$();\n// This preview will be considered a separte page for the mobile browser\n//will appear next to the textarea on the tablet and desktop view.\nimport React, { useContext } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { MarkdownContext } from '../../context/markdownContext';\n// ReactMarkdown will render the markdown.\n\nimport './preview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preview = doc => {\n  _s();\n  const {\n    input\n  } = useContext(MarkdownContext);\n  // The doc will have to be pulled from a database maybe. I guess two options, database or live input.\n  // let tester = '**This will be ** where the markdown will happenasdfasdfasdfdsfsafasdfasdfasdfasdf.'\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"preview-flex\",\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      source: input,\n      className: \"markdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n  //   ReactDOM.render(<ReactMarkdown>\n  //   **This will be ** where the markdown will happen.\n  // </ReactMarkdown>)\n};\n_s(Preview, \"dzvs4VWKlk4lI8ciCV2v06/u0R8=\");\n_c = Preview;\nexport default Preview;\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["React","useContext","ReactMarkdown","MarkdownContext","Preview","doc","input"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/editor/preview.js"],"sourcesContent":["// This preview will be considered a separte page for the mobile browser\n//will appear next to the textarea on the tablet and desktop view.\nimport React, { useContext } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { MarkdownContext } from '../../context/markdownContext';\n// ReactMarkdown will render the markdown.\n\nimport './preview.css';\n\nconst Preview = (doc) => {\n  const { input } = useContext(MarkdownContext)\n  // The doc will have to be pulled from a database maybe. I guess two options, database or live input.\n  // let tester = '**This will be ** where the markdown will happenasdfasdfasdfdsfsafasdfasdfasdfasdf.'\n\n  return (\n    <div id='preview-flex'>\n      {/* <div id='markdown'> */}\n      {/* <ReactMarkdown className='markdown'> */}\n      <ReactMarkdown source={input} className=\"markdown\" />\n        {/* ######### testing **This will be ** where the markdown will happenasdfasdfasdfdsfsafasdfasdfasdfasdf.\n      </ReactMarkdown> */}\n\n\n      {/* // </div> */}\n   </div>\n  )\n      //   ReactDOM.render(<ReactMarkdown>\n      //   **This will be ** where the markdown will happen.\n      // </ReactMarkdown>)\n}\n\nexport default Preview;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SAASC,eAAe,QAAQ,+BAA+B;AAC/D;;AAEA,OAAO,eAAe;AAAC;AAEvB,MAAMC,OAAO,GAAIC,GAAG,IAAK;EAAA;EACvB,MAAM;IAAEC;EAAM,CAAC,GAAGL,UAAU,CAACE,eAAe,CAAC;EAC7C;EACA;;EAEA,oBACE;IAAK,EAAE,EAAC,cAAc;IAAA,uBAGpB,QAAC,aAAa;MAAC,MAAM,EAAEG,KAAM;MAAC,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAMlD;EAEH;EACA;EACA;AACN,CAAC;AAAA,GApBKF,OAAO;AAAA,KAAPA,OAAO;AAsBb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}