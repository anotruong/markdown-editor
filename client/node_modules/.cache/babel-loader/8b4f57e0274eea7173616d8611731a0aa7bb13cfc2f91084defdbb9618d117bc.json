{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/frontend/src/shared/component/navigation/components/documentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DocumentLink from './documentLink';\n\n//This component will display a list of objects in a form of buttons/links\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentList = props => {\n  _s();\n  const [isLoadinng, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedDocs, setLoadedDocs] = useState();\n\n  //test object\n  const tempObj = {\n    test1: {\n      name: 'cats.md',\n      date: '01/01/2023'\n    },\n    test2: {\n      name: 'burger.md',\n      date: '02/02/2023'\n    }\n  };\n\n  //Figure out a way to turn data fetched from backend and plugging them into clickable links or icons.\n\n  let objToArr = Object.entries(tempObj);\n\n  //retreving a list of doc objects from MongoDb\n  // const fetchDocs = async event => {\n  //   event.preventDefault();\n\n  //   try {\n  //     fetch('http://localhost:5000/', {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       title,\n  //       date\n  //     })\n  //   })\n  //   } catch(err) {\n  //     console.log(err);\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   const sendRequest = async () => {\n  //     setIsLoading(true);\n  //     try {\n  //       const response = await fetch('http://localhost:5000/api/navi')\n  //       const responseData = await response.json();\n\n  //       if (!response.ok) {\n  //         throw new Error(responseData.message);\n  //       }\n\n  //       setLoadedDocs(responseData.Docs);\n  //     } catch(err) {\n  //       setIsLoading(false);\n  //     }\n  //     setError(err.message);\n  //   }\n  //   sendRequest();\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"document-container\",\n    style: {\n      color: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tester\",\n      children: objToArr.map(_ref => {\n        let [_, value] = _ref;\n        return /*#__PURE__*/_jsxDEV(DocumentLink, {\n          name: value.name,\n          date: value.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentList, \"yZw74ApPaRSiu+CV0TqRkYGZR4Q=\");\n_c = DocumentList;\nexport default DocumentList;\nvar _c;\n$RefreshReg$(_c, \"DocumentList\");","map":{"version":3,"names":["React","useEffect","useState","DocumentLink","DocumentList","props","isLoadinng","setIsLoading","error","setError","loadedDocs","setLoadedDocs","tempObj","test1","name","date","test2","objToArr","Object","entries","color","map","_","value"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/frontend/src/shared/component/navigation/components/documentList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DocumentLink from './documentLink';\n\n//This component will display a list of objects in a form of buttons/links\nconst DocumentList = (props) => {\n  const [isLoadinng, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedDocs, setLoadedDocs] = useState();\n\n  //test object\n  const tempObj = {\n    test1: {\n      name: 'cats.md',\n      date: '01/01/2023'\n    },\n    test2: {\n      name: 'burger.md',\n      date: '02/02/2023'\n    }\n  };\n\n  //Figure out a way to turn data fetched from backend and plugging them into clickable links or icons.\n\n  let objToArr = Object.entries(tempObj);\n\n  //retreving a list of doc objects from MongoDb\n  // const fetchDocs = async event => {\n  //   event.preventDefault();\n\n  //   try {\n  //     fetch('http://localhost:5000/', {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       title,\n  //       date\n  //     })\n  //   })\n  //   } catch(err) {\n  //     console.log(err);\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   const sendRequest = async () => {\n  //     setIsLoading(true);\n  //     try {\n  //       const response = await fetch('http://localhost:5000/api/navi')\n  //       const responseData = await response.json();\n\n  //       if (!response.ok) {\n  //         throw new Error(responseData.message);\n  //       }\n  \n  //       setLoadedDocs(responseData.Docs);\n  //     } catch(err) {\n  //       setIsLoading(false);\n  //     }\n  //     setError(err.message);\n  //   }\n  //   sendRequest();\n  // }, [])\n\n  return(\n    <div id='document-container' style={{color: 'white'}}>\n      <div className=\"tester\">\n        {objToArr.map(([_, value]) => (\n          <DocumentLink name={value.name} date={value.date} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DocumentList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AAAA;AACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAClD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,EAAE;EACpC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,EAAE;;EAE9C;EACA,MAAMU,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLF,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE;IACR;EACF,CAAC;;EAED;;EAEA,IAAIE,QAAQ,GAAGC,MAAM,CAACC,OAAO,CAACP,OAAO,CAAC;;EAEtC;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,EAAE,EAAC,oBAAoB;IAAC,KAAK,EAAE;MAACQ,KAAK,EAAE;IAAO,CAAE;IAAA,uBACnD;MAAK,SAAS,EAAC,QAAQ;MAAA,UACpBH,QAAQ,CAACI,GAAG,CAAC;QAAA,IAAC,CAACC,CAAC,EAAEC,KAAK,CAAC;QAAA,oBACvB,QAAC,YAAY;UAAC,IAAI,EAAEA,KAAK,CAACT,IAAK;UAAC,IAAI,EAAES,KAAK,CAACR;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA,CACrD;IAAC;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GAtEKX,YAAY;AAAA,KAAZA,YAAY;AAwElB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}