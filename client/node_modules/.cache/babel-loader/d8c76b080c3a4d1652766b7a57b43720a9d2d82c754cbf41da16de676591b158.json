{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/trashButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './stylesheets/trashButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TrashButton = () => {\n  _s();\n  const [isTrashed, setTrashed] = useState(false);\n  const [isDisplayed, setDisplay] = useState('none');\n  let display = 'none';\n  const trashHandler = () => {\n    setTrashed(!isTrashed);\n    setDisplay(isDisplayed === 'block' ? 'none' : 'block');\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"trash-button\",\n        onClick: trashHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"trash-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"trash-popup\",\n        style: {\n          display: `${display}`\n        }\n        // trigger={isTrashed}\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"closed-btn\",\n          onClick: trashHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TrashButton, \"xWLjEq3vSc1afn5RapWN3FQ8Gnk=\");\n_c = TrashButton;\nexport default TrashButton;\nvar _c;\n$RefreshReg$(_c, \"TrashButton\");","map":{"version":3,"names":["React","useState","TrashButton","isTrashed","setTrashed","isDisplayed","setDisplay","display","trashHandler"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/trashButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/trashButton.css';\n\nconst TrashButton = () => {\n  const [ isTrashed, setTrashed ] = useState(false);\n  const [ isDisplayed, setDisplay ] = useState('none');\n  let display = 'none';\n\n  const trashHandler = () => {\n    setTrashed(!isTrashed);\n\n    setDisplay(isDisplayed === 'block' ? 'none' : 'block');\n\n  }\n\n  return (\n    <React.Fragment>\n      <>\n        <button id='trash-button' onClick={trashHandler}/>\n      </>\n      <div id='trash-container' >\n        {/* container for the button */}\n        <div \n          id='trash-popup' \n          style={{display: `${display}`}}\n          // trigger={isTrashed}\n          >\n          {/* the blurred background */}\n          <button id='closed-btn' onClick={trashHandler} />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n};\n\nexport default TrashButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,+BAA+B;AAAC;AAAA;AAEvC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAAEC,SAAS,EAAEC,UAAU,CAAE,GAAGH,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAEI,WAAW,EAAEC,UAAU,CAAE,GAAGL,QAAQ,CAAC,MAAM,CAAC;EACpD,IAAIM,OAAO,GAAG,MAAM;EAEpB,MAAMC,YAAY,GAAG,MAAM;IACzBJ,UAAU,CAAC,CAACD,SAAS,CAAC;IAEtBG,UAAU,CAACD,WAAW,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAExD,CAAC;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAA,uBACE;QAAQ,EAAE,EAAC,cAAc;QAAC,OAAO,EAAEG;MAAa;QAAA;QAAA;QAAA;MAAA;IAAE,iBACjD,eACH;MAAK,EAAE,EAAC,iBAAiB;MAAA,uBAEvB;QACE,EAAE,EAAC,aAAa;QAChB,KAAK,EAAE;UAACD,OAAO,EAAG,GAAEA,OAAQ;QAAC;QAC7B;QAAA;QAAA,uBAGA;UAAQ,EAAE,EAAC,YAAY;UAAC,OAAO,EAAEC;QAAa;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IAC7C;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACS;AAErB,CAAC;AAAC,GA9BIN,WAAW;AAAA,KAAXA,WAAW;AAgCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}