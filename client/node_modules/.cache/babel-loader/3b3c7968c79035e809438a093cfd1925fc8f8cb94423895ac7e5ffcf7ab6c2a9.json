{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/documentList.js\";\nimport React from 'react';\nimport DocumentLink from './documentLink';\n\n//This component will display a list of objects in a form of buttons/links\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentList = props => {\n  //test object\n  const tempObj = {\n    test1: {\n      name: 'cats.md',\n      date: '01/01/2023'\n    },\n    test2: {\n      name: 'burger.md',\n      date: '02/02/2023'\n    }\n  };\n\n  //iterate through object\n  const objHandler = () => {\n    try {\n      let stringTester = '';\n      let main = document.querySelector(\"document-container\");\n      Object.entries(tempObj).forEach(_ref => {\n        let [_, value] = _ref;\n        return stringTester += `<div name={${value.name}} date={${value.date}} /> `;\n      });\n      console.log(stringTester);\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(stringTester, 'text/html');\n      console.log(doc.body.firstChild);\n      main.appendChild(doc.body.firstChild);\n    } catch (error) {\n      console.log('did not succeed');\n    }\n\n    // return (\n    //<DocumentLink title={title} date={date} />\n    // )\n  };\n\n  let string = objHandler();\n\n  // let stringTester = '';\n\n  // Object.entries(tempObj).maps(([_, value]) => stringTester += `<div name={${value.name}} date={${value.date}} /> ` )\n\n  //passes temp obj through as an argument\n  // const list = objHandler(tempObj);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"document-container\",\n    style: {\n      color: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tester\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"date\",\n        children: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/tester\",\n        className: \"docTitle\",\n        children: \"cats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = DocumentList;\nexport default DocumentList;\nvar _c;\n$RefreshReg$(_c, \"DocumentList\");","map":{"version":3,"names":["React","DocumentLink","DocumentList","props","tempObj","test1","name","date","test2","objHandler","stringTester","main","document","querySelector","Object","entries","forEach","_","value","console","log","parser","DOMParser","doc","parseFromString","body","firstChild","appendChild","error","string","color"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/documentList.js"],"sourcesContent":["import React from 'react';\nimport DocumentLink from './documentLink';\n\n\n\n//This component will display a list of objects in a form of buttons/links\n\n\nconst DocumentList = (props) => {\n\n  //test object\n  const tempObj = {\n    test1: {\n      name: 'cats.md',\n      date: '01/01/2023'\n    },\n    test2: {\n      name: 'burger.md',\n      date: '02/02/2023'\n    }\n  };\n\n\n  //iterate through object\n  const objHandler = () => {\n    try {\n      let stringTester = '';\n\n      let main = document.querySelector(\"document-container\")\n\n      Object.entries(tempObj).forEach(([_, value]) => stringTester += `<div name={${value.name}} date={${value.date}} /> ` );\n\n      console.log(stringTester)\n\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(stringTester, 'text/html');\n      console.log(doc.body.firstChild)\n      main.appendChild(doc.body.firstChild);\n    } catch(error) {\n      console.log('did not succeed');\n    }\n\n    // return (\n      //<DocumentLink title={title} date={date} />\n    // )\n  };\n\n  let string = objHandler()\n\n\n  // let stringTester = '';\n\n  // Object.entries(tempObj).maps(([_, value]) => stringTester += `<div name={${value.name}} date={${value.date}} /> ` )\n\n  //passes temp obj through as an argument\n  // const list = objHandler(tempObj);\n\n  return(\n    <div id='document-container' style={{color: 'white'}}>\n      <div className=\"tester\">\n        <p className='date'>date</p>\n        <a href='/tester' className='docTitle'>cats</a>\n      </div>\n    </div>\n  );\n}\n\nexport default DocumentList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;;AAIzC;AAAA;AAGA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAE9B;EACA,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLF,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE;IACR;EACF,CAAC;;EAGD;EACA,MAAME,UAAU,GAAG,MAAM;IACvB,IAAI;MACF,IAAIC,YAAY,GAAG,EAAE;MAErB,IAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC;MAEvDC,MAAM,CAACC,OAAO,CAACX,OAAO,CAAC,CAACY,OAAO,CAAC;QAAA,IAAC,CAACC,CAAC,EAAEC,KAAK,CAAC;QAAA,OAAKR,YAAY,IAAK,cAAaQ,KAAK,CAACZ,IAAK,WAAUY,KAAK,CAACX,IAAK,OAAM;MAAA,EAAE;MAEtHY,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC;MAEzB,MAAMW,MAAM,GAAG,IAAIC,SAAS,EAAE;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACd,YAAY,EAAE,WAAW,CAAC;MAC7DS,OAAO,CAACC,GAAG,CAACG,GAAG,CAACE,IAAI,CAACC,UAAU,CAAC;MAChCf,IAAI,CAACgB,WAAW,CAACJ,GAAG,CAACE,IAAI,CAACC,UAAU,CAAC;IACvC,CAAC,CAAC,OAAME,KAAK,EAAE;MACbT,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC;;IAEA;IACE;IACF;EACF,CAAC;;EAED,IAAIS,MAAM,GAAGpB,UAAU,EAAE;;EAGzB;;EAEA;;EAEA;EACA;;EAEA,oBACE;IAAK,EAAE,EAAC,oBAAoB;IAAC,KAAK,EAAE;MAACqB,KAAK,EAAE;IAAO,CAAE;IAAA,uBACnD;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB;QAAG,SAAS,EAAC,MAAM;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAI,eAC5B;QAAG,IAAI,EAAC,SAAS;QAAC,SAAS,EAAC,UAAU;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EAC3C;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,KAzDK5B,YAAY;AA2DlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}