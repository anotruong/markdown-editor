{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/frontend/src/shared/component/navigation/components/trashBtn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { MarkdownContext } from '../../../context/markdownContext';\nimport '../../darkmode/darkmode.css';\nimport './stylesheets/trashBtn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrashButton = () => {\n  _s();\n  const {\n    isToggled\n  } = useContext(MarkdownContext);\n  const [isTrashed, setTrashed] = useState(false);\n  const [isDisplayed, setDisplay] = useState('none');\n  // let display = 'none';\n\n  const cancelHandler = () => {};\n  const trashHandler = () => {\n    setTrashed(!isTrashed);\n    console.log(`isTrashed: ${isTrashed}`);\n    setDisplay(isDisplayed === 'block' ? 'none' : 'block');\n  };\n  return (\n    /*#__PURE__*/\n    // <button id='trash-button' onClick={trashHandler}/>\n    _jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"trash-button\",\n        onClick: trashHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"delete-container\",\n        style: {\n          display: `${isDisplayed}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"cancel-btn\",\n          onClick: trashHandler,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"delete-flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"delete-popup\",\n              className: !isToggled ? 'popup-dark' : 'popup-light',\n              style: {\n                display: `${isDisplayed}`\n              }\n              // trigger={isTrashed}\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                id: \"title\",\n                style: {\n                  color: `${!isToggled ? 'white' : 'black'}`\n                },\n                children: \"Delete this Document?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"deleteText\",\n                style: {\n                  color: `${!isToggled ? '#C1C4CB' : '#7C8187'}`\n                },\n                children: \"Are you sure you want to delete the \\u2018welcome.md\\u2019 document and its contents? This action cannot be reversed.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"confirm-btn\",\n                onClick: trashHandler,\n                children: \"Continue & Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(TrashButton, \"pr4r3vpI0iQjR+PAuoxPLnGiX9A=\");\n_c = TrashButton;\nexport default TrashButton;\nvar _c;\n$RefreshReg$(_c, \"TrashButton\");","map":{"version":3,"names":["React","useState","useContext","MarkdownContext","TrashButton","isToggled","isTrashed","setTrashed","isDisplayed","setDisplay","cancelHandler","trashHandler","console","log","display","color"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/frontend/src/shared/component/navigation/components/trashBtn.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { MarkdownContext } from '../../../context/markdownContext';\n\nimport '../../darkmode/darkmode.css';\nimport './stylesheets/trashBtn.css';\n\nconst TrashButton = () => {\n  const { isToggled } = useContext(MarkdownContext);\n  const [ isTrashed, setTrashed ] = useState(false);\n  const [ isDisplayed, setDisplay ] = useState('none');\n  // let display = 'none';\n\n  const cancelHandler = () => {\n\n  };\n\n  const trashHandler = () => {\n    setTrashed(!isTrashed);\n    console.log(`isTrashed: ${isTrashed}`)\n\n    setDisplay(isDisplayed === 'block' ? 'none' : 'block');\n  }\n\n  return (\n    // <button id='trash-button' onClick={trashHandler}/>\n\n    <React.Fragment>\n      {/* <div id='trash-container'> */}\n      <button id='trash-button' onClick={trashHandler}/>\n\n      {/* </div> */}\n      {/* the blurred background */}  \n      <div id='delete-container' style={{display: `${isDisplayed}`}}>\n        <button\n          id='cancel-btn'\n          onClick={trashHandler}\n          >\n          <div id='delete-flex'>\n            <div \n              id='delete-popup'\n              className={!isToggled ? 'popup-dark' : 'popup-light'}\n              style={{display: `${isDisplayed}`}}\n              // trigger={isTrashed}\n              >\n              <h2 id=\"title\" style={{color: `${!isToggled ? 'white' : 'black'}`}}\n              >Delete this Document?</h2>\n              <p id='deleteText' style={{color: `${!isToggled ? '#C1C4CB' : '#7C8187'}`}}>Are you sure you want to delete the ‘welcome.md’ document and its contents? This action cannot be reversed.</p>\n              {/* <button id='closed-btn' onClick={trashHandler} /> */}\n              <button \n                id='confirm-btn' \n                onClick={trashHandler}\n              >\n                Continue & Delete\n              </button>\n              {/* <button \n                id='cancel-btn' \n                style={{color: `${!isToggled ? 'black' : 'white'}`}}\n                onClick={cancelHandler}\n              /> */}\n            </div> \n          </div> \n        </button>\n      </div> \n    </React.Fragment>\n  )\n};\n\nexport default TrashButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,eAAe,QAAQ,kCAAkC;AAElE,OAAO,6BAA6B;AACpC,OAAO,4BAA4B;AAAC;AAEpC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM;IAAEC;EAAU,CAAC,GAAGH,UAAU,CAACC,eAAe,CAAC;EACjD,MAAM,CAAEG,SAAS,EAAEC,UAAU,CAAE,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAEO,WAAW,EAAEC,UAAU,CAAE,GAAGR,QAAQ,CAAC,MAAM,CAAC;EACpD;;EAEA,MAAMS,aAAa,GAAG,MAAM,CAE5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBJ,UAAU,CAAC,CAACD,SAAS,CAAC;IACtBM,OAAO,CAACC,GAAG,CAAE,cAAaP,SAAU,EAAC,CAAC;IAEtCG,UAAU,CAACD,WAAW,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EACxD,CAAC;EAED;IAAA;IACE;IAEA,QAAC,KAAK,CAAC,QAAQ;MAAA,wBAEb;QAAQ,EAAE,EAAC,cAAc;QAAC,OAAO,EAAEG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eAIlD;QAAK,EAAE,EAAC,kBAAkB;QAAC,KAAK,EAAE;UAACG,OAAO,EAAG,GAAEN,WAAY;QAAC,CAAE;QAAA,uBAC5D;UACE,EAAE,EAAC,YAAY;UACf,OAAO,EAAEG,YAAa;UAAA,uBAEtB;YAAK,EAAE,EAAC,aAAa;YAAA,uBACnB;cACE,EAAE,EAAC,cAAc;cACjB,SAAS,EAAE,CAACN,SAAS,GAAG,YAAY,GAAG,aAAc;cACrD,KAAK,EAAE;gBAACS,OAAO,EAAG,GAAEN,WAAY;cAAC;cACjC;cAAA;cAAA,wBAEA;gBAAI,EAAE,EAAC,OAAO;gBAAC,KAAK,EAAE;kBAACO,KAAK,EAAG,GAAE,CAACV,SAAS,GAAG,OAAO,GAAG,OAAQ;gBAAC,CAAE;gBAAA,UAClE;cAAqB;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eAC3B;gBAAG,EAAE,EAAC,YAAY;gBAAC,KAAK,EAAE;kBAACU,KAAK,EAAG,GAAE,CAACV,SAAS,GAAG,SAAS,GAAG,SAAU;gBAAC,CAAE;gBAAA,UAAC;cAA2G;gBAAA;gBAAA;gBAAA;cAAA,QAAI,eAE3L;gBACE,EAAE,EAAC,aAAa;gBAChB,OAAO,EAAEM,YAAa;gBAAA,UACvB;cAED;gBAAA;gBAAA;gBAAA;cAAA,QAAS;YAAA;cAAA;cAAA;cAAA;YAAA;UAML;YAAA;YAAA;YAAA;UAAA;QACF;UAAA;UAAA;UAAA;QAAA;MACC;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA;EACS;AAErB,CAAC;AAAC,GA3DIP,WAAW;AAAA,KAAXA,WAAW;AA6DjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}