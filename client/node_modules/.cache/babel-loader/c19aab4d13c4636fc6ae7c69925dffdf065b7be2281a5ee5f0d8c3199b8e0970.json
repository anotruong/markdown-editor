{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/frontend/src/shared/component/navigation/components/saveBtn.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { MarkdownContext } from '../../../context/markdownContext';\nimport { useHttpClient } from '../../../hooks/http-hook';\nimport './stylesheets/saveBtn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SaveButton = () => {\n  _s();\n  const {\n    textareaInput,\n    docTitle,\n    currentDocId\n  } = useContext(MarkdownContext);\n  const {\n    isLoading,\n    error,\n    sendRequest\n  } = useHttpClient();\n\n  //trigger POST with onclick of save button.\n  // const saveDoc = async event => {\n  //   event.preventDefault();\n\n  //Need to retrieve document ID from backend to plug into 'fetch' function'\n  const saveContent = async () => {\n    try {\n      await sendRequest(`http://localhost:5000/navi/${currentDocId}`, 'PATCH', JSON.stringify({\n        id: currentDocId,\n        title: docTitle + \".md\",\n        description: textareaInput\n      }), {\n        'Content-Type': 'application/json'\n      });\n    } catch (err) {}\n    // const response = await fetch(`http://localhost:5000/navi`, {\n    //   method: 'PATCH',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify({\n    //     id: currentDocId,\n    //     title: docTitle + \".md\",\n    //     description: textareaInput\n    //   })\n    // })\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div id='save-container' >\n    _jsxDEV(\"button\", {\n      id: \"save-btn\",\n      onClick: saveContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n    // </div>\n  );\n};\n_s(SaveButton, \"XANrZL1lxcmKdz2V+a1mgyOPsp4=\", false, function () {\n  return [useHttpClient];\n});\n_c = SaveButton;\nexport default SaveButton;\nvar _c;\n$RefreshReg$(_c, \"SaveButton\");","map":{"version":3,"names":["React","useContext","useState","MarkdownContext","useHttpClient","SaveButton","textareaInput","docTitle","currentDocId","isLoading","error","sendRequest","saveContent","JSON","stringify","id","title","description","err"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/frontend/src/shared/component/navigation/components/saveBtn.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { MarkdownContext } from '../../../context/markdownContext';\nimport { useHttpClient } from '../../../hooks/http-hook';\nimport './stylesheets/saveBtn.css';\n\nconst SaveButton = () => {\n  const {\n    textareaInput, \n    docTitle,\n    currentDocId\n  } = useContext(MarkdownContext);\n\n  const { isLoading, error, sendRequest } = useHttpClient();\n\n    //trigger POST with onclick of save button.\n  // const saveDoc = async event => {\n  //   event.preventDefault();\n  \n  //Need to retrieve document ID from backend to plug into 'fetch' function'\n  const saveContent = async () => {\n\n    try {\n     await sendRequest(\n        `http://localhost:5000/navi/${currentDocId}`,\n        'PATCH',\n        JSON.stringify({\n              id: currentDocId,\n              title: docTitle + \".md\",\n              description: textareaInput\n        }),\n        {\n          'Content-Type': 'application/json'\n        },\n      )\n    } catch(err) {\n\n    }\n      // const response = await fetch(`http://localhost:5000/navi`, {\n      //   method: 'PATCH',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //   },\n      //   body: JSON.stringify({\n      //     id: currentDocId,\n      //     title: docTitle + \".md\",\n      //     description: textareaInput\n      //   })\n      // })\n  };\n\n  return (\n    // <div id='save-container' >\n      <button \n        id='save-btn' \n        onClick={saveContent}\n      />\n    // </div>\n  )\n};\n\nexport default SaveButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,eAAe,QAAQ,kCAAkC;AAClE,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAO,2BAA2B;AAAC;AAEnC,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM;IACJC,aAAa;IACbC,QAAQ;IACRC;EACF,CAAC,GAAGP,UAAU,CAACE,eAAe,CAAC;EAE/B,MAAM;IAAEM,SAAS;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGP,aAAa,EAAE;;EAEvD;EACF;EACA;;EAEA;EACA,MAAMQ,WAAW,GAAG,YAAY;IAE9B,IAAI;MACH,MAAMD,WAAW,CACb,8BAA6BH,YAAa,EAAC,EAC5C,OAAO,EACPK,IAAI,CAACC,SAAS,CAAC;QACTC,EAAE,EAAEP,YAAY;QAChBQ,KAAK,EAAET,QAAQ,GAAG,KAAK;QACvBU,WAAW,EAAEX;MACnB,CAAC,CAAC,EACF;QACE,cAAc,EAAE;MAClB,CAAC,CACF;IACH,CAAC,CAAC,OAAMY,GAAG,EAAE,CAEb;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EAED;IAAA;IACE;IACE;MACE,EAAE,EAAC,UAAU;MACb,OAAO,EAAEN;IAAY;MAAA;MAAA;MAAA;IAAA;IAEzB;EAAA;AAEJ,CAAC;AAAC,GArDIP,UAAU;EAAA,QAO4BD,aAAa;AAAA;AAAA,KAPnDC,UAAU;AAuDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}