{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/frontend/src/shared/component/navigation/components/saveButton.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { MarkdownContext } from '../../../context/markdownContext';\nimport './stylesheets/saveButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SaveButton = () => {\n  _s();\n  const {\n    textareaInput,\n    docTitle\n  } = useContext(MarkdownContext);\n  const [error, setError] = useState();\n\n  //trigger POST with onclick of save button.\n  // const saveDoc = async event => {\n  //   event.preventDefault();\n\n  //Need to retrieve document ID from backend to plug into 'fetch' function'\n  const saveContent = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/navi`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: docTitle,\n          description: textareaInput\n        })\n      });\n      const responseData = await response.json();\n    } catch (err) {\n      setError(err.message || 'Something went wrong, please try again');\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div id='save-container' >\n    _jsxDEV(\"button\", {\n      id: \"save-btn\",\n      onClick: saveContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n    // </div>\n  );\n};\n_s(SaveButton, \"xQZb/5ZDiG4nV5DucS4Fvv6h6cU=\");\n_c = SaveButton;\nexport default SaveButton;\nvar _c;\n$RefreshReg$(_c, \"SaveButton\");","map":{"version":3,"names":["React","useContext","useState","MarkdownContext","SaveButton","textareaInput","docTitle","error","setError","saveContent","response","fetch","method","headers","body","JSON","stringify","title","description","responseData","json","err","message"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/frontend/src/shared/component/navigation/components/saveButton.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { MarkdownContext } from '../../../context/markdownContext';\n\nimport './stylesheets/saveButton.css';\n\nconst SaveButton = () => {\n  const {textareaInput, docTitle} = useContext(MarkdownContext);\n  const [error, setError] = useState();\n\n    //trigger POST with onclick of save button.\n  // const saveDoc = async event => {\n  //   event.preventDefault();\n  \n  //Need to retrieve document ID from backend to plug into 'fetch' function'\n  const saveContent = async () => {\n\n    try {\n      const response = await fetch(`http://localhost:5000/navi`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: docTitle,\n          description: textareaInput\n        })\n      })\n      const responseData = await response.json();\n    } catch(err) {\n      setError(err.message || 'Something went wrong, please try again')\n    }\n  };\n\n  return (\n    // <div id='save-container' >\n      <button \n        id='save-btn' \n        onClick={saveContent}\n      />\n    // </div>\n  )\n};\n\nexport default SaveButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,eAAe,QAAQ,kCAAkC;AAElE,OAAO,8BAA8B;AAAC;AAEtC,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM;IAACC,aAAa;IAAEC;EAAQ,CAAC,GAAGL,UAAU,CAACE,eAAe,CAAC;EAC7D,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,EAAE;;EAElC;EACF;EACA;;EAEA;EACA,MAAMO,WAAW,GAAG,YAAY;IAE9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4BAA2B,EAAE;QACzDC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAEX,QAAQ;UACfY,WAAW,EAAEb;QACf,CAAC;MACH,CAAC,CAAC;MACF,MAAMc,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAI,EAAE;IAC5C,CAAC,CAAC,OAAMC,GAAG,EAAE;MACXb,QAAQ,CAACa,GAAG,CAACC,OAAO,IAAI,wCAAwC,CAAC;IACnE;EACF,CAAC;EAED;IAAA;IACE;IACE;MACE,EAAE,EAAC,UAAU;MACb,OAAO,EAAEb;IAAY;MAAA;MAAA;MAAA;IAAA;IAEzB;EAAA;AAEJ,CAAC;AAAC,GApCIL,UAAU;AAAA,KAAVA,UAAU;AAsChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}