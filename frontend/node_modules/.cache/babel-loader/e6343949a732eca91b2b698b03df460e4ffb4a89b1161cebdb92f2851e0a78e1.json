{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/documentList.js\";\nimport React from 'react';\nimport DocumentLink from './documentLink';\n\n//This component will display a list of objects in a form of buttons/links\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentList = props => {\n  //test object\n  const tempObj = {\n    test1: {\n      name: 'cats.md',\n      date: '01/01/2023'\n    },\n    test2: {\n      name: 'burger.md',\n      date: '02/02/2023'\n    }\n  };\n\n  //iterate through object\n  const objHandler = () => {\n    try {\n      let stringTester = '';\n\n      // let main = document.querySelector(\"document-container\")\n\n      // Object.entries(tempObj).forEach(([_, value]) => stringTester += `<{DocumentLink name={${value.name}} date={${value.date}} /> ` );\n\n      console.log(Object.entries(tempObj).forEach(_ref => {\n        let [_k, _v] = _ref;\n        return console.log(_k, _v);\n      }));\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(stringTester, 'text/html');\n      console.log(doc.body.firstChild);\n      // string = doc.body.firstChild;\n      // main.appendChild(doc.body.firstChild);\n    } catch (error) {\n      console.log('did not succeed');\n    }\n\n    // return (\n    //<DocumentLink title={title} date={date} />\n    // )\n  };\n\n  let objToArr = Object.entries(tempObj);\n  console.log(objToArr);\n  // objHandler();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"document-container\",\n    style: {\n      color: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tester\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = DocumentList;\nexport default DocumentList;\nvar _c;\n$RefreshReg$(_c, \"DocumentList\");","map":{"version":3,"names":["React","DocumentLink","DocumentList","props","tempObj","test1","name","date","test2","objHandler","stringTester","console","log","Object","entries","forEach","_k","_v","parser","DOMParser","doc","parseFromString","body","firstChild","error","objToArr","color"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/documentList.js"],"sourcesContent":["import React from 'react';\nimport DocumentLink from './documentLink';\n\n\n\n//This component will display a list of objects in a form of buttons/links\n\n\nconst DocumentList = (props) => {\n\n  //test object\n  const tempObj = {\n    test1: {\n      name: 'cats.md',\n      date: '01/01/2023'\n    },\n    test2: {\n      name: 'burger.md',\n      date: '02/02/2023'\n    }\n  };\n\n  \n  //iterate through object\n  const objHandler = () => {\n    try {\n      let stringTester = '';\n\n      // let main = document.querySelector(\"document-container\")\n\n      // Object.entries(tempObj).forEach(([_, value]) => stringTester += `<{DocumentLink name={${value.name}} date={${value.date}} /> ` );\n\n      console.log(Object.entries(tempObj).forEach(([_k, _v]) => console.log(_k, _v)))\n\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(stringTester, 'text/html');\n      console.log(doc.body.firstChild)\n      // string = doc.body.firstChild;\n      // main.appendChild(doc.body.firstChild);\n    } catch(error) {\n      console.log('did not succeed');\n    }\n\n    // return (\n      //<DocumentLink title={title} date={date} />\n    // )\n  };\n\n  let objToArr = Object.entries(tempObj);\n  \n  console.log(objToArr)\n  // objHandler();\n\n  return(\n    <div id='document-container' style={{color: 'white'}}>\n      <div className=\"tester\">\n        {/* <DocumentLink name='cats' date='01/01/23'/> */}\n        {/* {string} */}\n        {/* {objToArr.map(([key, value]) => (\n          <DocumentLink name={key} date={value} />\n        ))} */}\n      </div>\n    </div>\n  );\n}\n\nexport default DocumentList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;;AAIzC;AAAA;AAGA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAE9B;EACA,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLF,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE;IACR;EACF,CAAC;;EAGD;EACA,MAAME,UAAU,GAAG,MAAM;IACvB,IAAI;MACF,IAAIC,YAAY,GAAG,EAAE;;MAErB;;MAEA;;MAEAC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,OAAO,CAACV,OAAO,CAAC,CAACW,OAAO,CAAC;QAAA,IAAC,CAACC,EAAE,EAAEC,EAAE,CAAC;QAAA,OAAKN,OAAO,CAACC,GAAG,CAACI,EAAE,EAAEC,EAAE,CAAC;MAAA,EAAC,CAAC;MAE/E,MAAMC,MAAM,GAAG,IAAIC,SAAS,EAAE;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACX,YAAY,EAAE,WAAW,CAAC;MAC7DC,OAAO,CAACC,GAAG,CAACQ,GAAG,CAACE,IAAI,CAACC,UAAU,CAAC;MAChC;MACA;IACF,CAAC,CAAC,OAAMC,KAAK,EAAE;MACbb,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC;;IAEA;IACE;IACF;EACF,CAAC;;EAED,IAAIa,QAAQ,GAAGZ,MAAM,CAACC,OAAO,CAACV,OAAO,CAAC;EAEtCO,OAAO,CAACC,GAAG,CAACa,QAAQ,CAAC;EACrB;;EAEA,oBACE;IAAK,EAAE,EAAC,oBAAoB;IAAC,KAAK,EAAE;MAACC,KAAK,EAAE;IAAO,CAAE;IAAA,uBACnD;MAAK,SAAS,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA;EAMjB;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,KAxDKxB,YAAY;AA0DlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}