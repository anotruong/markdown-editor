{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/editor/preview.js\",\n  _s = $RefreshSig$();\n// This preview will be considered a separte page for the mobile browser\n//will appear next to the textarea on the tablet and desktop view.\nimport React, { useContext } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { MarkdownContext } from '../../context/markdownContext';\n// ReactMarkdown will render the markdown.\n\nimport '../darkmode/darkmode.css';\nimport './preview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preview = props => {\n  _s();\n  const {\n    textareaInput\n  } = useContext(MarkdownContext);\n  const {\n    isToggled\n  } = useContext(MarkdownContext);\n\n  // The doc will have to be pulled from a database maybe. I guess two options, database or live input.\n  // let tester = '**This will be ** where the markdown will happenasdfasdfasdfdsfsafasdfasdfasdfasdf.'\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"preview-flex\",\n    className: !isToggled ? 'darkEditor' : 'lightEditor',\n    style: props.style,\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown\n    // id={!isToggled ? 'lightEditor' : 'darkEditor'} \n    // className={!isToggled ? 'lightEditor' : 'darkEditor'} \n    , {\n      className: `markdown-${!isToggled ? 'dark' : 'light'}`,\n      children: textareaInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n  //   ReactDOM.render(<ReactMarkdown>\n  //   **This will be ** where the markdown will happen.\n  // </ReactMarkdown>)\n};\n_s(Preview, \"Is+6p6NT5wMeygWiXrQ8jxeLW7g=\");\n_c = Preview;\nexport default Preview;\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["React","useContext","ReactMarkdown","MarkdownContext","Preview","props","textareaInput","isToggled","style"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/editor/preview.js"],"sourcesContent":["// This preview will be considered a separte page for the mobile browser\n//will appear next to the textarea on the tablet and desktop view.\nimport React, { useContext } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { MarkdownContext } from '../../context/markdownContext';\n// ReactMarkdown will render the markdown.\n\nimport '../darkmode/darkmode.css';\nimport './preview.css';\n\nconst Preview = (props) => {\n  const { textareaInput } = useContext(MarkdownContext);\n  const { isToggled } = useContext(MarkdownContext);\n  \n  // The doc will have to be pulled from a database maybe. I guess two options, database or live input.\n  // let tester = '**This will be ** where the markdown will happenasdfasdfasdfdsfsafasdfasdfasdfasdf.'\n\n  return (\n    <div \n      id='preview-flex' \n      className={!isToggled ? 'darkEditor' : 'lightEditor'}\n      style={props.style}>\n      {/* <div id='markdown'> */}\n      {/* <ReactMarkdown className='markdown'> */}\n      <ReactMarkdown \n        // id={!isToggled ? 'lightEditor' : 'darkEditor'} \n        // className={!isToggled ? 'lightEditor' : 'darkEditor'} \n        className={`markdown-${!isToggled ? 'dark' : 'light'}`}\n\n        children={textareaInput} \n      />\n        {/* ######### testing **This will be ** where the markdown will happenasdfasdfasdfdsfsafasdfasdfasdfasdf.\n      </ReactMarkdown> */}\n\n\n      {/* // </div> */}\n   </div>\n  )\n      //   ReactDOM.render(<ReactMarkdown>\n      //   **This will be ** where the markdown will happen.\n      // </ReactMarkdown>)\n}\n\nexport default Preview;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SAASC,eAAe,QAAQ,+BAA+B;AAC/D;;AAEA,OAAO,0BAA0B;AACjC,OAAO,eAAe;AAAC;AAEvB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAM;IAAEC;EAAc,CAAC,GAAGL,UAAU,CAACE,eAAe,CAAC;EACrD,MAAM;IAAEI;EAAU,CAAC,GAAGN,UAAU,CAACE,eAAe,CAAC;;EAEjD;EACA;;EAEA,oBACE;IACE,EAAE,EAAC,cAAc;IACjB,SAAS,EAAE,CAACI,SAAS,GAAG,YAAY,GAAG,aAAc;IACrD,KAAK,EAAEF,KAAK,CAACG,KAAM;IAAA,uBAGnB,QAAC;IACC;IACA;IAAA;MACA,SAAS,EAAG,YAAW,CAACD,SAAS,GAAG,MAAM,GAAG,OAAQ,EAAE;MAEvD,QAAQ,EAAED;IAAc;MAAA;MAAA;MAAA;IAAA;EACxB;IAAA;IAAA;IAAA;EAAA,QAMC;EAEH;EACA;EACA;AACN,CAAC;AAAA,GA/BKF,OAAO;AAAA,KAAPA,OAAO;AAiCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}