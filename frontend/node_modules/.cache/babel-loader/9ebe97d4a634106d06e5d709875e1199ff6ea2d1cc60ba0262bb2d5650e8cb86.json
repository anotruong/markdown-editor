{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/naviButton.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { MarkdownContext } from '../../../context/markdownContext';\nimport './stylesheets/naviButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaviButton = () => {\n  _s();\n  // open and close button.\n  // START no props\n  // ONCLICK boolean \n  // HOOK useState to change the state of the button when clicked to hide menu.\n  // hook state will be used to communicate between the navibutton and sidemenu modules. \n\n  const {\n    sideMenuState,\n    setSideMenuState\n  } = useContext(MarkdownContext);\n  const sideMenuHandler = () => {\n    if (!sideMenuState) {\n      setSideMenuState(true);\n      document.getElementById(\"navi-button\").element.style.color = \"white\";\n    } else {\n      setSideMenuState(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"navi-button\",\n    onClick: sideMenuHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(NaviButton, \"jEW2uTrk8lHUwRNf8vi9f0sw3vo=\");\n_c = NaviButton;\nexport default NaviButton;\nvar _c;\n$RefreshReg$(_c, \"NaviButton\");","map":{"version":3,"names":["React","useContext","MarkdownContext","NaviButton","sideMenuState","setSideMenuState","sideMenuHandler","document","getElementById","element","style","color"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/naviButton.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { MarkdownContext } from '../../../context/markdownContext';\n\nimport './stylesheets/naviButton.css';\n\nconst NaviButton = () => {\n\n  // open and close button.\n  // START no props\n  // ONCLICK boolean \n  // HOOK useState to change the state of the button when clicked to hide menu.\n    // hook state will be used to communicate between the navibutton and sidemenu modules. \n\n  const {sideMenuState, setSideMenuState} = useContext(MarkdownContext);\n\n  const sideMenuHandler = () => {\n    if (!sideMenuState) {\n      setSideMenuState(true);\n      document.getElementById(\"navi-button\").element.style.color = \"white\"\n    } else {\n      setSideMenuState(false);\n    }\n  }\n  \n\n  return (\n    <button id='navi-button' \n      onClick={sideMenuHandler}\n    > \n    </button>\n  )\n};\n\nexport default NaviButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,eAAe,QAAQ,kCAAkC;AAElE,OAAO,8BAA8B;AAAC;AAEtC,MAAMC,UAAU,GAAG,MAAM;EAAA;EAEvB;EACA;EACA;EACA;EACE;;EAEF,MAAM;IAACC,aAAa;IAAEC;EAAgB,CAAC,GAAGJ,UAAU,CAACC,eAAe,CAAC;EAErE,MAAMI,eAAe,GAAG,MAAM;IAC5B,IAAI,CAACF,aAAa,EAAE;MAClBC,gBAAgB,CAAC,IAAI,CAAC;MACtBE,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,OAAO,CAACC,KAAK,CAACC,KAAK,GAAG,OAAO;IACtE,CAAC,MAAM;MACLN,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAGD,oBACE;IAAQ,EAAE,EAAC,aAAa;IACtB,OAAO,EAAEC;EAAgB;IAAA;IAAA;IAAA;EAAA,QAElB;AAEb,CAAC;AAAC,GA1BIH,UAAU;AAAA,KAAVA,UAAU;AA4BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}