{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SideMenu from './shared/component/navigation/sideMenu';\nimport Textarea from './shared/component/editor/textarea';\nimport HeaderNavi from './shared/component/navigation/headerNavi';\nimport EditBar from './shared/component/navigation/edit-bar.js';\nimport Preview from './shared/component/editor/preview';\nimport { MarkdownContext } from './shared/context/markdownContext.js';\nimport { markdownText } from './shared/component/editor/components/introText';\nimport './shared/component/darkmode/darkmode.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [previewOn, setPreviewOn] = useState(false);\n  const [textareaInput, setTextareaInput] = useState(markdownText);\n  const [sideMenuState, setSideMenuState] = useState(false);\n  const [isToggled, setToggle] = useState(true);\n  return /*#__PURE__*/_jsxDEV(MarkdownContext.Provider, {\n    value: {\n      previewOn,\n      setPreviewOn,\n      textareaInput,\n      setTextareaInput,\n      sideMenuState,\n      setSideMenuState,\n      isToggled,\n      setToggle\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"App\",\n      className: !isToggled ? 'dark' : 'light',\n      children: [/*#__PURE__*/_jsxDEV(HeaderNavi, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), !previewOn ? /*#__PURE__*/_jsxDEV(Textarea, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(Preview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y3fGsieywY2MVJA+rb/e0Jsx1Lk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SideMenu","Textarea","HeaderNavi","EditBar","Preview","MarkdownContext","markdownText","App","previewOn","setPreviewOn","textareaInput","setTextareaInput","sideMenuState","setSideMenuState","isToggled","setToggle"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SideMenu from './shared/component/navigation/sideMenu';\n\nimport Textarea from './shared/component/editor/textarea';\nimport HeaderNavi from './shared/component/navigation/headerNavi';\nimport EditBar from './shared/component/navigation/edit-bar.js';\nimport Preview from './shared/component/editor/preview';\nimport { MarkdownContext } from './shared/context/markdownContext.js';\n\nimport { markdownText } from './shared/component/editor/components/introText';\nimport './shared/component/darkmode/darkmode.css';\nimport './App.css';\n\nfunction App() {\n  const [previewOn, setPreviewOn] = useState(false);\n  const [textareaInput, setTextareaInput] = useState(markdownText);\n  const [sideMenuState, setSideMenuState] = useState(false);\n  const [isToggled, setToggle] = useState(true);\n  \n  return (\n    <MarkdownContext.Provider value={{\n      previewOn, setPreviewOn,\n      textareaInput, setTextareaInput,\n      sideMenuState, setSideMenuState,\n      isToggled, setToggle\n    }}> \n      <div \n        id=\"App\"\n        className={!isToggled ? 'dark' : 'light'}\n        >\n\n        <HeaderNavi />\n        <EditBar />\n        {!previewOn ? <Textarea /> : <Preview />}\n        <SideMenu />        \n      </div>\n    </MarkdownContext.Provider>  \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,wCAAwC;AAE7D,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,UAAU,MAAM,0CAA0C;AACjE,OAAOC,OAAO,MAAM,2CAA2C;AAC/D,OAAOC,OAAO,MAAM,mCAAmC;AACvD,SAASC,eAAe,QAAQ,qCAAqC;AAErE,SAASC,YAAY,QAAQ,gDAAgD;AAC7E,OAAO,0CAA0C;AACjD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAACO,YAAY,CAAC;EAChE,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACe,SAAS,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE7C,oBACE,QAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAE;MAC/BS,SAAS;MAAEC,YAAY;MACvBC,aAAa;MAAEC,gBAAgB;MAC/BC,aAAa;MAAEC,gBAAgB;MAC/BC,SAAS;MAAEC;IACb,CAAE;IAAA,uBACA;MACE,EAAE,EAAC,KAAK;MACR,SAAS,EAAE,CAACD,SAAS,GAAG,MAAM,GAAG,OAAQ;MAAA,wBAGzC,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACd,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,EACV,CAACN,SAAS,gBAAG,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,gBAAG,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACxC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACmB;AAE/B;AAAC,GAzBQD,GAAG;AAAA,KAAHA,GAAG;AA2BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}