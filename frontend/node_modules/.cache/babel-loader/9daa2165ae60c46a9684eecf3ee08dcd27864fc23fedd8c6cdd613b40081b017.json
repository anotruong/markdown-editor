{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/documentList.js\";\nimport React from 'react';\nimport DocumentLink from './documentLink';\n\n//This component will display a list of objects in a form of buttons/links\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentList = props => {\n  //test object\n  const tempObj = {\n    test1: {\n      name: 'cats.md',\n      date: '01/01/2023'\n    },\n    test2: {\n      name: 'burger.md',\n      date: '02/02/2023'\n    }\n  };\n\n  //iterate through object\n  const objHandler = () => {\n    try {\n      let stringTester = 'teset';\n\n      // Object.entries(tempObj).forEach(([_, value]) => stringTester += `<div name={${value.name}} date={${value.date}} /> ` );\n\n      const parser = new DOMParser();\n      const result = parser.parseFromString(stringTester, 'text/html');\n      return result;\n    } catch (error) {\n      console.log('did not succeed');\n    }\n\n    // return (\n    //<DocumentLink title={title} date={date} />\n    // )\n  };\n  // let stringTester = '';\n\n  // Object.entries(tempObj).maps(([_, value]) => stringTester += `<div name={${value.name}} date={${value.date}} /> ` )\n\n  //passes temp obj through as an argument\n  // const list = objHandler(tempObj);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"document-container\",\n    style: {\n      color: 'white'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = DocumentList;\nexport default DocumentList;\nvar _c;\n$RefreshReg$(_c, \"DocumentList\");","map":{"version":3,"names":["React","DocumentLink","DocumentList","props","tempObj","test1","name","date","test2","objHandler","stringTester","parser","DOMParser","result","parseFromString","error","console","log","color"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/documentList.js"],"sourcesContent":["import React from 'react';\nimport DocumentLink from './documentLink';\n\n\n\n//This component will display a list of objects in a form of buttons/links\n\n\nconst DocumentList = (props) => {\n\n  //test object\n  const tempObj = {\n    test1: {\n      name: 'cats.md',\n      date: '01/01/2023'\n    },\n    test2: {\n      name: 'burger.md',\n      date: '02/02/2023'\n    }\n  };\n\n\n  //iterate through object\n  const objHandler = () => {\n    try {\n      let stringTester = 'teset';\n\n      // Object.entries(tempObj).forEach(([_, value]) => stringTester += `<div name={${value.name}} date={${value.date}} /> ` );\n\n      const parser = new DOMParser();\n      const result = parser.parseFromString(stringTester, 'text/html');\n\n      return result;\n    } catch(error) {\n      console.log('did not succeed');\n    }\n\n    // return (\n      //<DocumentLink title={title} date={date} />\n    // )\n  };\n  // let stringTester = '';\n\n  // Object.entries(tempObj).maps(([_, value]) => stringTester += `<div name={${value.name}} date={${value.date}} /> ` )\n\n  //passes temp obj through as an argument\n  // const list = objHandler(tempObj);\n\n  return(\n    <div id='document-container' style={{color: 'white'}}>\n      {/* {objHandler()} */}\n    </div>\n  );\n}\n\nexport default DocumentList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;;AAIzC;AAAA;AAGA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAE9B;EACA,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLF,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE;IACR;EACF,CAAC;;EAGD;EACA,MAAME,UAAU,GAAG,MAAM;IACvB,IAAI;MACF,IAAIC,YAAY,GAAG,OAAO;;MAE1B;;MAEA,MAAMC,MAAM,GAAG,IAAIC,SAAS,EAAE;MAC9B,MAAMC,MAAM,GAAGF,MAAM,CAACG,eAAe,CAACJ,YAAY,EAAE,WAAW,CAAC;MAEhE,OAAOG,MAAM;IACf,CAAC,CAAC,OAAME,KAAK,EAAE;MACbC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC;;IAEA;IACE;IACF;EACF,CAAC;EACD;;EAEA;;EAEA;EACA;;EAEA,oBACE;IAAK,EAAE,EAAC,oBAAoB;IAAC,KAAK,EAAE;MAACC,KAAK,EAAE;IAAO;EAAE;IAAA;IAAA;IAAA;EAAA,QAE/C;AAEV,CAAC;AAAA,KA9CKhB,YAAY;AAgDlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}