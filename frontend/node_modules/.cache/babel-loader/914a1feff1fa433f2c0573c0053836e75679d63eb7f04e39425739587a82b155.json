{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/trashButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './stylesheets/trashButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrashButton = () => {\n  _s();\n  const [isTrashed, setTrashed] = useState(false);\n  const [isDisplayed, setDisplay] = useState('none');\n  // let display = 'none';\n\n  const trashHandler = () => {\n    setTrashed(!isTrashed);\n    console.log(`isTrashed: ${isTrashed}`);\n    setDisplay(isDisplayed === 'block' ? 'none' : 'block');\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"trash-button\",\n    onClick: trashHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n\n  // <React.Fragment>\n  //   <>\n  //   <button id='trash-button' onClick={trashHandler}/>\n\n  //   </>\n  //   <div id='trash-container' >\n  //     {/* container for the button */}\n  //     <div \n  //       id='trash-popup' \n  //       style={{display: `${isDisplayed}`}}\n  //       // trigger={isTrashed}\n  //       >\n  //       {/* the blurred background */}\n  //       <button id='closed-btn' onClick={trashHandler} />\n  //     </div>\n  //   </div>\n  // </React.Fragment>\n  ;\n};\n_s(TrashButton, \"xWLjEq3vSc1afn5RapWN3FQ8Gnk=\");\n_c = TrashButton;\nexport default TrashButton;\nvar _c;\n$RefreshReg$(_c, \"TrashButton\");","map":{"version":3,"names":["React","useState","TrashButton","isTrashed","setTrashed","isDisplayed","setDisplay","trashHandler","console","log"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/trashButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/trashButton.css';\n\nconst TrashButton = () => {\n  const [ isTrashed, setTrashed ] = useState(false);\n  const [ isDisplayed, setDisplay ] = useState('none');\n  // let display = 'none';\n\n  const trashHandler = () => {\n    setTrashed(!isTrashed);\n    console.log(`isTrashed: ${isTrashed}`)\n\n    setDisplay(isDisplayed === 'block' ? 'none' : 'block');\n\n  }\n\n  return (\n    <button id='trash-button' onClick={trashHandler}/>\n\n    // <React.Fragment>\n    //   <>\n    //   <button id='trash-button' onClick={trashHandler}/>\n\n    //   </>\n    //   <div id='trash-container' >\n    //     {/* container for the button */}\n    //     <div \n    //       id='trash-popup' \n    //       style={{display: `${isDisplayed}`}}\n    //       // trigger={isTrashed}\n    //       >\n    //       {/* the blurred background */}\n    //       <button id='closed-btn' onClick={trashHandler} />\n    //     </div>\n    //   </div>\n    // </React.Fragment>\n  )\n};\n\nexport default TrashButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,+BAA+B;AAAC;AAEvC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAAEC,SAAS,EAAEC,UAAU,CAAE,GAAGH,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAEI,WAAW,EAAEC,UAAU,CAAE,GAAGL,QAAQ,CAAC,MAAM,CAAC;EACpD;;EAEA,MAAMM,YAAY,GAAG,MAAM;IACzBH,UAAU,CAAC,CAACD,SAAS,CAAC;IACtBK,OAAO,CAACC,GAAG,CAAE,cAAaN,SAAU,EAAC,CAAC;IAEtCG,UAAU,CAACD,WAAW,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAExD,CAAC;EAED,oBACE;IAAQ,EAAE,EAAC,cAAc;IAAC,OAAO,EAAEE;EAAa;IAAA;IAAA;IAAA;EAAA;;EAEhD;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAC,GAlCIL,WAAW;AAAA,KAAXA,WAAW;AAoCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}