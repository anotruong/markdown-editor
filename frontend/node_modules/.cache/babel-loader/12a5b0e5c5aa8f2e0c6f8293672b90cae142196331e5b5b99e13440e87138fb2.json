{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/darkmode/darkmode-btn.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { MarkdownContext } from '../../context/markdownContext';\n// import sun from \"../../images/sunOn-moonOff.png\";\n// import moon from \"../../images/moonOn-sunOff.png\";\n// import \"../../images/moonOn-sunOff.png\";\n\nimport \"../darkmode/darkmode.css\";\nimport \"./darkmode-btn.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkmodeBtn = _ref => {\n  _s();\n  let {\n    onClick\n  } = _ref;\n  const {\n    isToggled,\n    setToggle\n  } = useContext(MarkdownContext);\n\n  // const bgHandler = () => {\n  //   // !isToggled ? setSunMoonBG(moon) : setSunMoonBG(sun);\n\n  //   const setBackground = (img) => document.getElementById(\"darkmode-btn\").style.backgroundImage = `url(${img})`;\n\n  //   !isToggled ? setBackground(sun) : setBackground(moon);\n  // }\n\n  const blockquoteHandler = () => {\n    let tag = tagName => document.getElementsByTagName(tagName).style;\n    if (!isToggled) {\n      // darkmode\n      tag('blockquote').backgroundColor = '#979797';\n      // document.getElementsByTagName\n    } else {\n      //lightmode\n    }\n  };\n  const darkModeHandler = () => {\n    setToggle(!isToggled);\n    onClick(!isToggled);\n\n    // bgHandler();\n    blockquoteHandler();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"darkmode-btn\",\n    className: !isToggled ? \"sunBG\" : \"moonBG\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: isToggled,\n        onClick: darkModeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkmodeBtn, \"XeCTxbFcLVzR8DDDh7GHV52ylWM=\");\n_c = DarkmodeBtn;\nexport default DarkmodeBtn;\nvar _c;\n$RefreshReg$(_c, \"DarkmodeBtn\");","map":{"version":3,"names":["React","useContext","MarkdownContext","DarkmodeBtn","onClick","isToggled","setToggle","blockquoteHandler","tag","tagName","document","getElementsByTagName","style","backgroundColor","darkModeHandler"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/darkmode/darkmode-btn.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { MarkdownContext } from '../../context/markdownContext';\n// import sun from \"../../images/sunOn-moonOff.png\";\n// import moon from \"../../images/moonOn-sunOff.png\";\n// import \"../../images/moonOn-sunOff.png\";\n\nimport \"../darkmode/darkmode.css\";\nimport \"./darkmode-btn.css\";\n\nconst DarkmodeBtn = ({ onClick }) => {\n\n  const {isToggled, setToggle} = useContext(MarkdownContext);\n\n  // const bgHandler = () => {\n  //   // !isToggled ? setSunMoonBG(moon) : setSunMoonBG(sun);\n\n  //   const setBackground = (img) => document.getElementById(\"darkmode-btn\").style.backgroundImage = `url(${img})`;\n\n  //   !isToggled ? setBackground(sun) : setBackground(moon);\n  // }\n\n  const blockquoteHandler = () => {\n    let tag = (tagName) => document.getElementsByTagName(tagName).style;\n\n    if (!isToggled) {\n      // darkmode\n      tag('blockquote').backgroundColor = '#979797';\n      // document.getElementsByTagName\n    } else {\n      //lightmode\n    }\n\n  }\n\n  const darkModeHandler = () => {\n\n    setToggle(!isToggled);\n    onClick(!isToggled);\n\n    // bgHandler();\n    blockquoteHandler()\n  }\n\n  return(\n    <div \n      id=\"darkmode-btn\" \n      className={!isToggled ? \"sunBG\" : \"moonBG\"}\n    >\n\n      <label>\n        <input \n          type=\"checkbox\" \n          defaultChecked={isToggled} \n          onClick={darkModeHandler} \n        />\n        <span />\n    </label>\n   </div>\n  )\n};\n\nexport default DarkmodeBtn;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,eAAe,QAAQ,+BAA+B;AAC/D;AACA;AACA;;AAEA,OAAO,0BAA0B;AACjC,OAAO,oBAAoB;AAAC;AAE5B,MAAMC,WAAW,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAE9B,MAAM;IAACC,SAAS;IAAEC;EAAS,CAAC,GAAGL,UAAU,CAACC,eAAe,CAAC;;EAE1D;EACA;;EAEA;;EAEA;EACA;;EAEA,MAAMK,iBAAiB,GAAG,MAAM;IAC9B,IAAIC,GAAG,GAAIC,OAAO,IAAKC,QAAQ,CAACC,oBAAoB,CAACF,OAAO,CAAC,CAACG,KAAK;IAEnE,IAAI,CAACP,SAAS,EAAE;MACd;MACAG,GAAG,CAAC,YAAY,CAAC,CAACK,eAAe,GAAG,SAAS;MAC7C;IACF,CAAC,MAAM;MACL;IAAA;EAGJ,CAAC;EAED,MAAMC,eAAe,GAAG,MAAM;IAE5BR,SAAS,CAAC,CAACD,SAAS,CAAC;IACrBD,OAAO,CAAC,CAACC,SAAS,CAAC;;IAEnB;IACAE,iBAAiB,EAAE;EACrB,CAAC;EAED,oBACE;IACE,EAAE,EAAC,cAAc;IACjB,SAAS,EAAE,CAACF,SAAS,GAAG,OAAO,GAAG,QAAS;IAAA,uBAG3C;MAAA,wBACE;QACE,IAAI,EAAC,UAAU;QACf,cAAc,EAAEA,SAAU;QAC1B,OAAO,EAAES;MAAgB;QAAA;QAAA;QAAA;MAAA,QACzB,eACF;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AAET,CAAC;AAAC,GAlDIX,WAAW;AAAA,KAAXA,WAAW;AAoDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}