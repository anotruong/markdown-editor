{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/previewButton.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { MarkdownContext } from '../../../context/markdownContext';\nimport './stylesheets/previewButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreviewButton = () => {\n  _s();\n  let {\n    previewOn,\n    setPreviewOn\n  } = useContext(MarkdownContext);\n  const previewHandler = () => {\n    if (previewOn) {\n      setPreviewOn(false);\n      // go to markdown\n    } else {\n      setPreviewOn(true);\n      // go to preview\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"button-container\",\n    children: !previewOn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"preview-off\",\n      onClick: previewHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"preview-on\",\n      onClick: previewHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)\n  // <button id=\"preview-on\" />\n  ;\n};\n_s(PreviewButton, \"6vcOktxrPk0XTdn5s0mpmo2TMWU=\");\n_c = PreviewButton;\nexport default PreviewButton;\nvar _c;\n$RefreshReg$(_c, \"PreviewButton\");","map":{"version":3,"names":["React","useContext","MarkdownContext","PreviewButton","previewOn","setPreviewOn","previewHandler"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/previewButton.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { MarkdownContext } from '../../../context/markdownContext';\n\nimport './stylesheets/previewButton.css';\n\n\nconst PreviewButton = () => {\n  let { previewOn, setPreviewOn } = useContext(MarkdownContext)\n\n  const previewHandler = () => {\n    if (previewOn) {\n      setPreviewOn(false);\n      // go to markdown\n    } else {\n      setPreviewOn(true);\n      // go to preview\n    }\n  };\n\n  return(\n    <div id='button-container'>\n      {!previewOn ? \n        <button id=\"preview-off\" \n        onClick={previewHandler}\n        /> : <button id=\"preview-on\" \n        onClick={previewHandler}\n        />\n      } \n     </div>\n    // <button id=\"preview-on\" />\n  )\n};\n\nexport default PreviewButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,eAAe,QAAQ,kCAAkC;AAElE,OAAO,iCAAiC;AAAC;AAGzC,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,IAAI;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGJ,UAAU,CAACC,eAAe,CAAC;EAE7D,MAAMI,cAAc,GAAG,MAAM;IAC3B,IAAIF,SAAS,EAAE;MACbC,YAAY,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,MAAM;MACLA,YAAY,CAAC,IAAI,CAAC;MAClB;IACF;EACF,CAAC;;EAED,oBACE;IAAK,EAAE,EAAC,kBAAkB;IAAA,UACvB,CAACD,SAAS,gBACT;MAAQ,EAAE,EAAC,aAAa;MACxB,OAAO,EAAEE;IAAe;MAAA;MAAA;MAAA;IAAA,QACtB,gBAAG;MAAQ,EAAE,EAAC,YAAY;MAC5B,OAAO,EAAEA;IAAe;MAAA;MAAA;MAAA;IAAA;EACtB;IAAA;IAAA;IAAA;EAAA;EAGN;EAAA;AAEJ,CAAC;AAAC,GAzBIH,aAAa;AAAA,KAAbA,aAAa;AA2BnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}