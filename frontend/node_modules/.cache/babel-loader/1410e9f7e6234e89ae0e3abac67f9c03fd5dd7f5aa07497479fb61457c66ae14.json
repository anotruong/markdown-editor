{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/frontend/src/shared/component/navigation/components/documentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DocItem from './docItem';\n\n//This component will display a list of objects in a form of buttons/links\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentList = props => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedDocs, setLoadedDocs] = useState();\n\n  //test object\n  const tempObj = {\n    test1: {\n      name: 'cats.md',\n      date: '01/01/2023'\n    },\n    test2: {\n      name: 'burger.md',\n      date: '02/02/2023'\n    }\n  };\n\n  //Figure out a way to turn data fetched from backend and plugging them into clickable links or icons.\n\n  //the documents will be fetched by from the backend here and passed through DocumentLink.\n\n  let objToArr = Object.entries(tempObj);\n\n  // let documentsLists;\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('http://localhost:5001/sideMenu');\n        const responseData = await response.json();\n        let documentsLists = responseData.documentsList;\n        let arrTest = [];\n        for (props of documentsLists) {\n          console.log(props[0]);\n          arrTest.push(props.entries());\n\n          // props.forEach(key => console.log(key))\n        }\n        // documentsLists = JSON.parse(documentsLists)\n        console.log(`response: ${documentsLists}`);\n        // console.log(`docs: ${documentsLists.docs}`);\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setLoadedDocs(documentsLists);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n    sendRequest();\n  }, []);\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  // for (props of loadedDocs) {\n  //   // console.log(props.keys());\n  //   props.forEach(key => console.log(key))\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"document-container\",\n    style: {\n      color: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tester\",\n      children: objToArr.map(_ref => {\n        let [_, value] = _ref;\n        return /*#__PURE__*/_jsxDEV(DocItem, {\n          items: loadedDocs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 12\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentList, \"qFH6tT7FG/efuZPq2XekLs5h8bY=\");\n_c = DocumentList;\nexport default DocumentList;\nvar _c;\n$RefreshReg$(_c, \"DocumentList\");","map":{"version":3,"names":["React","useEffect","useState","DocItem","DocumentList","props","isLoading","setIsLoading","error","setError","loadedDocs","setLoadedDocs","tempObj","test1","name","date","test2","objToArr","Object","entries","sendRequest","response","fetch","responseData","json","documentsLists","documentsList","arrTest","console","log","push","ok","Error","message","err","errorHandler","color","map","_","value"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/frontend/src/shared/component/navigation/components/documentList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DocItem from './docItem';\n\n//This component will display a list of objects in a form of buttons/links\nconst DocumentList = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedDocs, setLoadedDocs] = useState();\n\n  //test object\n  const tempObj = {\n    test1: {\n      name: 'cats.md',\n      date: '01/01/2023'\n    },\n    test2: {\n      name: 'burger.md',\n      date: '02/02/2023'\n    }\n  };\n\n  //Figure out a way to turn data fetched from backend and plugging them into clickable links or icons.\n\n  //the documents will be fetched by from the backend here and passed through DocumentLink.\n\n  let objToArr = Object.entries(tempObj);\n\n  // let documentsLists;\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('http://localhost:5001/sideMenu');\n        const responseData = await response.json();\n        let documentsLists = responseData.documentsList;\n        let arrTest = [];\n\n        for (props of documentsLists) {\n          console.log(props[0]);\n          arrTest.push(props.entries())\n          \n          // props.forEach(key => console.log(key))\n        }\n        // documentsLists = JSON.parse(documentsLists)\n        console.log(`response: ${ documentsLists}`);\n        // console.log(`docs: ${documentsLists.docs}`);\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n  \n        setLoadedDocs(documentsLists);\n      } catch(err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n\n    }\n    sendRequest();\n  }, [])\n\n  const errorHandler = () => {\n    setError(null);\n  }\n\n  // for (props of loadedDocs) {\n  //   // console.log(props.keys());\n  //   props.forEach(key => console.log(key))\n  // }\n\n  return(\n    <div id='document-container' style={{color: 'white'}}>\n      <div className=\"tester\">\n        {objToArr.map(([_, value]) => (\n           <DocItem items={loadedDocs} />\n        ))}\n\n      </div>\n    </div>\n  );\n}\n\nexport default DocumentList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AAAA;AACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,EAAE;EACpC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,EAAE;;EAE9C;EACA,MAAMU,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLF,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE;IACR;EACF,CAAC;;EAED;;EAEA;;EAEA,IAAIE,QAAQ,GAAGC,MAAM,CAACC,OAAO,CAACP,OAAO,CAAC;;EAEtC;;EAEAX,SAAS,CAAC,MAAM;IACd,MAAMmB,WAAW,GAAG,YAAY;MAC9Bb,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;QAC9D,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAC1C,IAAIC,cAAc,GAAGF,YAAY,CAACG,aAAa;QAC/C,IAAIC,OAAO,GAAG,EAAE;QAEhB,KAAKtB,KAAK,IAAIoB,cAAc,EAAE;UAC5BG,OAAO,CAACC,GAAG,CAACxB,KAAK,CAAC,CAAC,CAAC,CAAC;UACrBsB,OAAO,CAACG,IAAI,CAACzB,KAAK,CAACc,OAAO,EAAE,CAAC;;UAE7B;QACF;QACA;QACAS,OAAO,CAACC,GAAG,CAAE,aAAaJ,cAAe,EAAC,CAAC;QAC3C;;QAEA,IAAI,CAACJ,QAAQ,CAACU,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAACT,YAAY,CAACU,OAAO,CAAC;QACvC;QAEAtB,aAAa,CAACc,cAAc,CAAC;MAC/B,CAAC,CAAC,OAAMS,GAAG,EAAE;QACXzB,QAAQ,CAACyB,GAAG,CAACD,OAAO,CAAC;MACvB;MACA1B,YAAY,CAAC,KAAK,CAAC;IAErB,CAAC;IACDa,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,YAAY,GAAG,MAAM;IACzB1B,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;;EAED;EACA;EACA;EACA;;EAEA,oBACE;IAAK,EAAE,EAAC,oBAAoB;IAAC,KAAK,EAAE;MAAC2B,KAAK,EAAE;IAAO,CAAE;IAAA,uBACnD;MAAK,SAAS,EAAC,QAAQ;MAAA,UACpBnB,QAAQ,CAACoB,GAAG,CAAC;QAAA,IAAC,CAACC,CAAC,EAAEC,KAAK,CAAC;QAAA,oBACtB,QAAC,OAAO;UAAC,KAAK,EAAE7B;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA,CAChC;IAAC;MAAA;MAAA;MAAA;IAAA;EAEE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GA7EKN,YAAY;AAAA,KAAZA,YAAY;AA+ElB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}