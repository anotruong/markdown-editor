{"ast":null,"code":"var _jsxFileName = \"/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/previewButton.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { MarkdownContext } from '../../../context/markdownContext';\nimport '../../darkmode/darkmode.css';\nimport './stylesheets/previewButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreviewButton = () => {\n  _s();\n  const {\n    previewOn,\n    setPreviewOn\n  } = useContext(MarkdownContext);\n  const {\n    isToggled\n  } = useContext(MarkdownContext);\n  const previewHandler = () => {\n    if (previewOn) {\n      setPreviewOn(false);\n      // go to markdown\n    } else {\n      setPreviewOn(true);\n      // go to preview\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"button-container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: !previewOn ? \"preview-off\" : \"preview-on\",\n      className: !isToggled ? 'darkPreview' : 'lightPreview',\n      onClick: previewHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PreviewButton, \"3oO4I10q7l5Y6X+jsqgXGdOBJgU=\");\n_c = PreviewButton;\nexport default PreviewButton;\nvar _c;\n$RefreshReg$(_c, \"PreviewButton\");","map":{"version":3,"names":["React","useContext","MarkdownContext","PreviewButton","previewOn","setPreviewOn","isToggled","previewHandler"],"sources":["/Users/meillionatruong/Code/frontend_mentor/markdown-editor/src/shared/component/navigation/components/previewButton.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { MarkdownContext } from '../../../context/markdownContext';\n\nimport '../../darkmode/darkmode.css';\nimport './stylesheets/previewButton.css';\n\n\nconst PreviewButton = () => {\n  const { previewOn, setPreviewOn } = useContext(MarkdownContext);\n  const { isToggled } = useContext(MarkdownContext);\n\n  const previewHandler = () => {\n    if (previewOn) {\n      setPreviewOn(false);\n      // go to markdown\n    } else {\n      setPreviewOn(true);\n      // go to preview\n    }\n  };\n\n  return(\n    <div id='button-container'>\n      <button \n        id={!previewOn ? \"preview-off\" : \"preview-on\"} \n        className={!isToggled ? 'darkPreview' : 'lightPreview'}\n        onClick={previewHandler} />\n     </div>\n  )\n};\n\nexport default PreviewButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,eAAe,QAAQ,kCAAkC;AAElE,OAAO,6BAA6B;AACpC,OAAO,iCAAiC;AAAC;AAGzC,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGJ,UAAU,CAACC,eAAe,CAAC;EAC/D,MAAM;IAAEI;EAAU,CAAC,GAAGL,UAAU,CAACC,eAAe,CAAC;EAEjD,MAAMK,cAAc,GAAG,MAAM;IAC3B,IAAIH,SAAS,EAAE;MACbC,YAAY,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,MAAM;MACLA,YAAY,CAAC,IAAI,CAAC;MAClB;IACF;EACF,CAAC;;EAED,oBACE;IAAK,EAAE,EAAC,kBAAkB;IAAA,uBACxB;MACE,EAAE,EAAE,CAACD,SAAS,GAAG,aAAa,GAAG,YAAa;MAC9C,SAAS,EAAE,CAACE,SAAS,GAAG,aAAa,GAAG,cAAe;MACvD,OAAO,EAAEC;IAAe;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACxB;AAEX,CAAC;AAAC,GAtBIJ,aAAa;AAAA,KAAbA,aAAa;AAwBnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}